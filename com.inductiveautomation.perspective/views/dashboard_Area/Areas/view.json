{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\tsystem.perspective.sendMessage(\u0027refresh_planta\u0027)"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {
    "planta": "1100_"
  },
  "propConfig": {
    "params.planta": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "width": 1200
    },
    "path": "dashboard_Area/Components/Template"
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "params": {},
                    "view": "dashboard_Area/Plantas"
                  },
                  "scope": "C",
                  "type": "nav"
                }
              }
            },
            "meta": {
              "name": "Button"
            },
            "position": {
              "basis": "40px"
            },
            "props": {
              "image": {
                "height": 32,
                "source": "/system/images/Builtin/icons/32/navigate_left.png",
                "style": {
                  "backgroundColor": "#FFFFFF00"
                },
                "width": 32
              },
              "style": {
                "backgroundColor": "#FFFFFF00",
                "borderColor": "#FFFFFF00"
              },
              "text": "",
              "textStyle": {
                "backgroundColor": "#FFFFFF00",
                "borderColor": "#FFFFFF00"
              }
            },
            "type": "ia.input.button"
          },
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "1160px"
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "if({view.params.planta}\u003d\u00271100_\u0027,\u0027Minipak\u0027,\u0027Polybol\u0027)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "color": "#FFFFFF",
                "fontSize": "36px",
                "textAlign": "center"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "alignContent": "flex-start",
          "alignItems": "center",
          "justify": "space-evenly"
        },
        "type": "ia.container.flex"
      },
      {
        "custom": {
          "refresh": false
        },
        "meta": {
          "name": "FlexRepeater"
        },
        "position": {
          "basis": "736px"
        },
        "propConfig": {
          "custom.planta": {
            "binding": {
              "config": {
                "path": "session.custom.planta"
              },
              "type": "property"
            }
          },
          "props.instances": {
            "binding": {
              "config": {
                "path": "view.params.planta"
              },
              "transforms": [
                {
                  "code": "\tplanta \u003d value + \u0027*\u0027\n\tif value and planta !\u003d \u0027*\u0027 and planta !\u003d \u0027\u0027:\n\t\tfilter \u003d system.mes.object.filter.createFilter()\n\t\tfilter.setMESObjectTypeName(\u0027Area\u0027)\n\t\tfilter.setMESObjectNamePattern(planta)\n\t\tlist \u003d system.mes.searchMESObjects(filter)\n\t\toptions \u003d []\n\t\t#options.append({\u0027value\u0027:\u0027Sin Orden\u0027,\u0027label\u0027:\u0027Sin Orden\u0027})\n\t\tfor item in list:\n\t\t\ttemp \u003d {\u0027area\u0027:item.getName()}\n\t\t\toptions.append(temp)\n\t\tself.custom.refresh \u003d False\n\t\treturn options\n\telse:\n\t\treturn self.props.instances",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "direction": "column",
          "elementPosition": {
            "grow": 0
          },
          "justify": "space-between",
          "path": "dashboard_Area/Components/Area_Template",
          "style": {
            "marginLeft": "50px"
          },
          "useDefaultViewWidth": false
        },
        "scripts": {
          "customMethods": [],
          "messageHandlers": [
            {
              "messageType": "refresh_planta",
              "pageScope": true,
              "script": "\tplanta \u003d self.custom.planta + \u0027*\u0027\n\tif planta !\u003d \u0027*\u0027:\n\t\tfilter \u003d system.mes.object.filter.createFilter()\n\t\tfilter.setMESObjectTypeName(\u0027Area\u0027)\n\t\tfilter.setMESObjectNamePattern(planta)\n\t\tlist \u003d system.mes.searchMESObjects(filter)\n\t\toptions \u003d []\n\t\t#options.append({\u0027value\u0027:\u0027Sin Orden\u0027,\u0027label\u0027:\u0027Sin Orden\u0027})\n\t\tfor item in list:\n\t\t\ttemp \u003d {\u0027area\u0027:item.getName()}\n\t\t\toptions.append(temp)\n\t\tself.props.instances \u003d options\n\t\tsystem.perspective.sendMessage(\u0027refresh_area\u0027)",
              "sessionScope": true,
              "viewScope": true
            }
          ]
        },
        "type": "ia.display.flex-repeater"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "justify": "space-between",
      "style": {
        "backgroundColor": "#2B384B"
      }
    },
    "type": "ia.container.flex"
  }
}